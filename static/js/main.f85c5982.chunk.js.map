{"version":3,"sources":["components/TemplateForm.js","components/MainPage.js","components/Navbar.js","components/AdminDashboard.js","App.js","index.js"],"names":["TemplateForm","_ref","template","showOptionalFields","showRequiredFields","React","createElement","className","requiredFields","map","field","index","key","htmlFor","label","type","id","name","required","optionalFields","templates","color","MainPage","selectedTemplate","setSelectedTemplate","useState","viewOptionalFields","setViewOptionalFields","viewRequiredFields","setViewRequiredFields","fileName","setFileName","handleClosePopup","useEffect","handleEscKey","event","window","addEventListener","removeEventListener","onClick","handleButtonClick","style","backgroundColor","handleGoBack","handleViewOptionalFields","onChange","e","target","files","Navbar","src","alt","Link","to","AdminDashboard","submissions","setSubmissions","templateName","setTemplateName","dateFrom","setDateFrom","dateTo","setDateTo","fetchSubmissions","async","response","axios","get","params","data","error","console","alert","value","placeholder","submission","formData","Date","JSON","stringify","App","Router","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f85c5982.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction TemplateForm({ template, showOptionalFields, showRequiredFields }) {\n    return (\n        <form className=\"form-container\">\n            {/* Render required fields */}\n            {showRequiredFields && template.requiredFields.map((field, index) => (\n                <div className=\"form-group\" key={index}>\n                    <label htmlFor={field.label}>{field.label}</label>\n                    <input\n                        type={field.type}\n                        id={field.label}\n                        name={field.label}\n                        required={field.required}\n                    />\n                </div>\n            ))}\n\n            {showOptionalFields && template.optionalFields.map((field, index) => (\n                <div className=\"form-group\" key={index}>\n                    <label htmlFor={field.label}>{field.label}</label>\n                    <input\n                        type={field.type}\n                        id={field.label}\n                        name={field.label}\n                    />\n                </div>\n            ))}\n        </form>\n    );\n}\n\nexport default TemplateForm;\n","import React, { useState, useEffect } from 'react';\nimport TemplateForm from './TemplateForm';\nimport './MainPage.css'; // Include custom styles\n\nconst templates = [\n    {\n        name: 'Biochemistry Markers',\n        color: '#3498db',\n        requiredFields: [\n            { label: 'Name', type: 'text' },\n            { label: 'Age', type: 'number' },\n            { label: 'Lab ID', type: 'text' },\n            { label: 'Case No.', type: 'text' },\n            { label: 'Date', type: 'date' }\n        ],\n        optionalFields: [\n            { label: 'Ref. By', type: 'text' },\n            { label: 'Alpha Glucosidase', type: 'text' },\n            { label: 'Fructose', type: 'text' },\n            { label: 'Zinc', type: 'text' },\n            { label: 'Comment', type: 'textarea' }\n        ]\n    },\n    {\n        name: 'Blood Test',\n        color: '#e74c3c', // Red        \n        requiredFields: [\n            { label: 'Name', type: 'text' },\n            { label: 'Age', type: 'number' },\n            { label: 'Lab ID', type: 'text' },\n            { label: 'Case No.', type: 'text' },\n            { label: 'Date', type: 'date' }\n        ],\n        optionalFields: [\n            { label: 'Ref. By', type: 'text' },\n            { label: 'Hemoglobin', type: 'text' },\n            { label: 'Red blood cells', type: 'text' },\n            { label: 'Hematocrit', type: 'text' },\n            { label: 'MCV', type: 'text' },\n            { label: 'MCH', type: 'text' },\n            { label: 'MCHC', type: 'text' },\n            { label: 'Platelets', type: 'text' },\n            { label: 'White blood cells', type: 'text' },\n            { label: 'Neutrophils', type: 'text' },\n            { label: 'Neut.Staaf', type: 'text' },\n            { label: 'Neut. Seg.', type: 'text' },\n            { label: 'Lymphocytes', type: 'text' },\n            { label: 'Monocytes', type: 'text' },\n            { label: 'Eosinophils', type: 'text' },\n            { label: 'Basophiles', type: 'text' },\n            { label: 'Comment', type: 'textarea' }\n        ]\n    },\n    {\n        name: 'Bone Marrow Examination',\n        color: '#2ecc71', // Green        \n        requiredFields: [\n            { label: 'Name', type: 'text' },\n            { label: 'Age', type: 'number' },\n            { label: 'Lab ID', type: 'text' },\n            { label: 'Case No.', type: 'text' },\n            { label: 'Date', type: 'date' }\n        ],\n        optionalFields: [\n            { label: 'Ref. By', type: 'text' },\n            { label: 'Site', type: 'text' },\n            { label: 'Cellularity', type: 'text' },\n            { label: 'Erythroblasts', type: 'text' },\n            { label: 'Granulopoiesis', type: 'text' },\n            { label: 'Lymphocytes', type: 'text' },\n            { label: 'Blast', type: 'text' },\n            { label: 'Promyelocyte', type: 'text' },\n            { label: 'Myelocytes', type: 'text' },\n            { label: 'Metamyelocytes', type: 'text' },\n            { label: 'Band', type: 'text' },\n            { label: 'Netrophils', type: 'text' },\n            { label: 'Eosinophils', type: 'text' },\n            { label: 'M / E Ratio', type: 'text' },\n            { label: 'Comment', type: 'textarea' }\n        ]\n    },\n    {\n        name: 'Culture Sensitivity',\n        color: '#f39c12', // Orange        \n        requiredFields: [\n            { label: 'Name', type: 'text' },\n            { label: 'Age', type: 'number' },\n            { label: 'Lab ID', type: 'text' },\n            { label: 'Case No.', type: 'text' },\n            { label: 'Date', type: 'date' }\n        ],\n        optionalFields: [\n            { label: 'Ref. By', type: 'text' },\n            { label: 'Type of Specimen', type: 'text' },\n            { label: 'Leucocytes', type: 'text' },\n            { label: 'RBCs', type: 'text' },\n            { label: 'Gram Stain', type: 'text' },\n            { label: 'Bacterial Shape', type: 'text' },\n            { label: 'Bacterial Arrangement', type: 'text' },\n            { label: 'Culture Result (MICRO-ORGANISM)', type: 'text' },\n            { label: 'Antibiogrammes', type: 'text' },\n            { label: 'Sensitivity', type: 'text' },\n            { label: 'Intermediate', type: 'text' },\n            { label: 'Resistant', type: 'text' },\n            { label: 'Comment', type: 'textarea' }\n        ]\n    },\n    {\n        name: 'Semen',\n        color: '#9b59b6', // Purple        \n        requiredFields: [\n            { label: 'Patient Name', type: 'text' },\n            { label: 'Lab ID', type: 'text' },\n            { label: 'Date', type: 'date' }\n        ],\n        optionalFields: [\n            { label: 'Abstinence', type: 'text' },\n            { label: 'Collection', type: 'text' },\n            { label: 'Volume', type: 'text' },\n            { label: 'Color', type: 'text' },\n            { label: 'Oder', type: 'text' },\n            { label: 'PH', type: 'text' },\n            { label: 'Viscosity', type: 'text' },\n            { label: 'Liquefaction Time', type: 'text' },\n            { label: 'Liquefaction State', type: 'text' },\n            { label: 'Concentration', type: 'text' },\n            { label: 'Total Sperm Count', type: 'text' },\n            { label: 'Progressive Motility (PR)', type: 'text' },\n            { label: 'Total Motility (PR + NP)', type: 'text' },\n            { label: 'Morphology Normal', type: 'text' },\n            { label: 'Morphology Index', type: 'text' },\n            { label: 'Aggregation', type: 'text' },\n            { label: 'Agglutination', type: 'text' },\n            { label: 'WBC', type: 'text' },\n            { label: 'Immature Cell', type: 'text' },\n            { label: 'Round Cell', type: 'text' },\n            { label: 'Class A (fast & prog)', type: 'text' },\n            { label: 'Class B (slow & prog)', type: 'text' },\n            { label: 'Class C (non progressive)', type: 'text' },\n            { label: 'Class D (immotile)', type: 'text' },\n            { label: 'Vitality', type: 'text' },\n            { label: 'Dead', type: 'text' },\n            { label: 'Alive', type: 'text' },\n            { label: 'DNA Fragmentation Index', type: 'text' },\n            { label: 'Comment', type: 'textarea' }\n        ]\n    },\n    {\n        name: 'Stool Examination',\n        color: '#34495e', // Dark Blue        \n        requiredFields: [\n            { label: 'Name', type: 'text' },\n            { label: 'Age', type: 'number' },\n            { label: 'Lab ID', type: 'text' },\n            { label: 'Case No.', type: 'text' },\n            { label: 'Date', type: 'date' }\n        ],\n        optionalFields: [\n            { label: 'Ref. By', type: 'text' },\n            { label: 'Color', type: 'text' },\n            { label: 'Consistency', type: 'text' },\n            { label: 'Blood', type: 'text' },\n            { label: 'Mucus', type: 'text' },\n            { label: 'PH', type: 'text' },\n            { label: 'Red blood cells', type: 'text' },\n            { label: 'Pus Cells', type: 'text' },\n            { label: 'Cysts', type: 'text' },\n            { label: 'Crystals', type: 'text' },\n            { label: 'Trophozoites', type: 'text' },\n            { label: 'Ova', type: 'text' },\n            { label: 'Larva', type: 'text' },\n            { label: 'Blood (Occult)', type: 'text' },\n            { label: 'Others', type: 'text' },\n            { label: 'Comment', type: 'textarea' }\n        ]\n    }\n];\n\nfunction MainPage() {\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [viewOptionalFields, setViewOptionalFields] = useState(false);\n  const [viewRequiredFields, setViewRequiredFields] = useState(true);\n\n  const [fileName, setFileName] = useState(\"No File Chosen\");\n\n  const handleFileChange = (e) => {\n      setFileName(e.target.files[0] ? e.target.files[0].name : \"No File Chosen\");\n  };\n\n  const handleButtonClick = (template) => {\n      setSelectedTemplate(template);\n      setViewOptionalFields(false);\n      setViewRequiredFields(true); // Start with the required fields\n  };\n\n  const handleViewOptionalFields = () => {\n      setViewOptionalFields(true); // Show optional fields\n      setViewRequiredFields(false);\n  };\n\n  const handleGoBack = () => {\n      setViewOptionalFields(false);\n      setViewRequiredFields(true); // Go back to required fields\n  };\n\n  const handleClosePopup = () => {\n      setSelectedTemplate(null);\n      setViewOptionalFields(false); // Reset everything when closing the popup\n  };\n\n  // useEffect Hook to handle \"Esc\" key to close the popup\n  useEffect(() => {\n      const handleEscKey = (event) => {\n          if (event.key === 'Escape') {\n              handleClosePopup();\n          }\n      };\n\n      window.addEventListener('keydown', handleEscKey);\n\n      // Cleanup the event listener when the component is unmounted\n      return () => {\n          window.removeEventListener('keydown', handleEscKey);\n      };\n  }, []);\n\n  return (\n      <div className=\"main-container\">\n          <h1>ScopEx Lab Reporting</h1>\n          <div className=\"button-container\">\n              {templates.map((template, index) => (\n                  <button\n                      key={index}\n                      className=\"template-button\"\n                      onClick={() => handleButtonClick(template)}\n                      style={{ backgroundColor: template.color }}\n                  >\n                      {template.name}\n                  </button>\n              ))}\n          </div>\n\n          {selectedTemplate && (\n          <div className=\"popup-overlay\">\n              <div className=\"popup-content\">\n                  <button className=\"close-popup\" onClick={handleClosePopup}>×</button>\n\n                  {/* Conditional Rendering based on the current view */}\n                  {!viewOptionalFields ? (\n                      <div>\n                          <h2>{selectedTemplate.name} - Required Fields</h2>\n                          <TemplateForm template={selectedTemplate} showOptionalFields={false} showRequiredFields={true} />\n                          <button onClick={handleViewOptionalFields} className=\"optional-btn\">\n                              Add Optional Fields\n                          </button>\n                      </div>\n                  ) : (\n                      <div>\n                          <button className=\"back-btn\" onClick={handleGoBack}>\n                              ←\n                          </button>\n                          <h2>{selectedTemplate.name} - Optional Fields</h2>\n                          <TemplateForm template={selectedTemplate} showOptionalFields={true} showRequiredFields={false}/>\n                      </div>\n                  )}\n\n                  {/* Custom File Upload */}\n                  <div className=\"form-group full-width-upload\">\n                      <label htmlFor=\"file-upload\" className=\"upload-btn\">\n                          Upload File\n                      </label>\n                      <input\n                          type=\"file\"\n                          id=\"file-upload\"\n                          name=\"file-upload\"\n                          className=\"file-input\"\n                          onChange={handleFileChange}\n                      />\n                      <span className=\"file-name\">{fileName}</span>\n                  </div>\n\n                  {/* Submit Button */}\n                  <div className=\"form-actions\">\n                      <button type=\"submit\" className=\"submit-btn\">Submit</button>\n                  </div>\n              </div>\n          </div>\n          )}\n      </div>\n  );\n}\n\nexport default MainPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';  // Import the CSS file for styling\n\nfunction Navbar() {\n    return (\n        <nav className=\"navbar\">\n            <div className=\"navbar-logo\">\n                <img src=\"logo.png\" alt=\"Logo\" />\n            </div>\n            <ul className=\"navbar-links\">\n                <li>\n                    <Link to=\"/\">Home</Link>\n                    <Link to=\"/admin\">Dashboard</Link>\n                </li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AdminDashboard.css'; \n\nfunction AdminDashboard() {\n    const [submissions, setSubmissions] = useState([]);\n    const [templateName, setTemplateName] = useState('');\n    const [dateFrom, setDateFrom] = useState('');\n    const [dateTo, setDateTo] = useState('');\n\n    useEffect(() => {\n        fetchSubmissions();\n    }, [templateName, dateFrom, dateTo]);\n\n    const fetchSubmissions = async () => {\n        try {\n            const response = await axios.get('/api/form-submissions', {\n                params: {\n                    templateName,\n                    dateFrom,\n                    dateTo\n                }\n            });\n            setSubmissions(response.data);\n        } catch (error) {\n            console.error('Error fetching form submissions:', error);\n            alert('Error fetching form submissions');\n        }\n    };\n\n    return (\n        <div className=\"admin-dashboard\">\n            <h2>Admin Dashboard</h2>\n\n            <div className=\"filters\">\n                <label>\n                    Template Name:\n                    <input\n                        type=\"text\"\n                        value={templateName}\n                        onChange={(e) => setTemplateName(e.target.value)}\n                        placeholder=\"e.g., Blood Test\"\n                    />\n                </label>\n                <label>\n                    Date From:\n                    <input\n                        type=\"date\"\n                        value={dateFrom}\n                        onChange={(e) => setDateFrom(e.target.value)}\n                    />\n                </label>\n                <label>\n                    Date To:\n                    <input\n                        type=\"date\"\n                        value={dateTo}\n                        onChange={(e) => setDateTo(e.target.value)}\n                    />\n                </label>\n                <button onClick={fetchSubmissions}>Apply Filters</button>\n            </div>\n\n            <div className=\"submissions-list\">\n                <h3>Submitted Forms</h3>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Template Name</th>\n                            <th>Date</th>\n                            <th>Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {submissions.map((submission, index) => (\n                            <tr key={index}>\n                                <td>{submission.templateName}</td>\n                                <td>{submission.formData.Date}</td>\n                                <td>\n                                    <button onClick={() => alert(JSON.stringify(submission.formData, null, 2))}>\n                                        View Details\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default AdminDashboard;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport MainPage from './components/MainPage';\nimport Navbar from './components/Navbar';\nimport AdminDashboard from './components/AdminDashboard';\n\nfunction App() {\n    return (\n        <Router>\n            <Navbar />\n            <Routes>\n                <Route path=\"/\" element={<MainPage />} /> {/* Default route */}\n                <Route path=\"/admin\" element={<AdminDashboard />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App'; // Import the main App component\nimport './index.css'; // Import global styles if any\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}